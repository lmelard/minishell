
----------------------------------------
----- Modifs en cours - A PARTAGER -----
----------------------------------------

WIP - penser à mettre des ** et pas des * ?!?!


> Création d'un dossier "bin_collect" contenant les fichiers :
	- "bin_coll.c" qui va contenir :
		- la fonction 'ft_malloc': qui malloc selon les données transmises + ajoute 1 maillon à chaque malloc OK
		- la fonction 'ft_get_sizeof: pour récupérer le bon sizeof qui sera utilisé dans ft_malloc
	- "bin_list.c" qui regroupe les fonctions usuelles de listes chainées :
		- ft_lstadd_bin
		- ft_lstlast_bin
		- ft_lstclear_bin
		- ft_lstdelone_bin
		- ft_free_bin

	- en parallèle :
		- Création d'un enum additionnel dans minishell.h pour lister les types de sizeof
		- Création d'une nouvelle variable "struct t_bin"
		- Ajout de cette nouvelle variable 'bin' dans t_data *data pour ce "garbage collector" en liste chainée (init à NULL)
		- Ajout des fichiers/folders dans Makefile
			+ des fonctions dans le .h
		- Ajout dans la fonction qui initialise data (ft_init_data_0) de minishell.c : une init de bin à NULL

		--> /!\ /!\ /!\ /!\ /!\ /!\ /!\
		A AJUSTER POUR CHAQUE MALLOC !!
		+ CHECKER POUR CHAQUE PROCESS (fork()), quand on exit (surtout pour les child) ou on return...

Check des mallocs dans l'ordre des fonctions :
- 	ft_get_env(char **envp) dans parser/env.c
		--> modif des paramètres, ajout de data
		==> A FINALISER pour la sortie (pb de malloc donc on ne continue pas)
-	ft_lstadd_env(t_env **env, char *envp)
		--> modif des paramètres, ajout de data
		==> A FINALISER pour la sortie (pb de malloc donc on ne continue pas)
-	ft_substr()
		--> ajout dans utils2.c d'une fonction ft_substr_malloc
			pour modifier les malloc/check
-	ft_strdup()
		--> ajout dans utils2.c d'une fonction ft_strdup_malloc
			pour modifier les malloc/check
-	ft_built_in()
		--> modif des paramètres et de la fonction
		--> quitte directement si erreur
		==> A FINALISER pour la sortie (pb de malloc donc on ne continue pas)
-	ft_split()
		==> /!\ A FINALISER (WIP) /!\

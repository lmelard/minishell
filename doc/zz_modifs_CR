
--------------------------------------------------
----- Mail pour prise en compte bugs (21/09) -----
--------------------------------------------------

Enregistré dans /doc
Bug pour pas de token / free data dans child...


$USER | $USTER | echo $?	--> OK quand le token vide est en 1er
								bash :	0
										tiny_chris: command not found


$USdddER | $USTER | echo $?	--> PAS OK - pas d'affichage
								bash :	0

--------------------------------------------------
----- Modifs préparées (18/09) mais pas push -----
--------------------------------------------------

> Création d'un dossier "init"
	-->	création d'un fichier "init_data.c"
		- pour initialiser toutes les données de data
		- pour découper l'initialisation (obj réduire la fonction 'main')

> Création d'un dossier "clean"
	--> à compléter

> Dans le folder "parser" : création d'un fichier 'parser.c' pour regrouper toutes les fonctions parcourues du parsing
	--> déplacement des fonctions de minishell.c dans ce fichier parser.c sous le nom de fonction 'ft_parser(t_data *data)'
	?? ou les mettre dans la fonction ft_parser() qui reste dans minishell.c


----------------------------------------------------
----- modifs ci-dessous - COMMITED + PUSHED OK -----
----------------------------------------------------

> Création d'un autre file "cmd_list.c" pour y rassembler les fonctions de liste chainée:
	- int	ft_lstadd_cmd(t_cmd **cmd, char *cmdline)
	- t_cmd	*ft_lstlast_cmd(t_cmd *lst)
	- void	ft_free_cmd(t_cmd **cmd)
	- void	ft_lstdelone_cmd(t_cmd *node)

> Modification dans le file "get_commands.c"
	- nom "ft_get_cmdline()" remplacé par "ft_get_raw_cmd()" (y.c. dans .h)
		+ cmdline remplacé par cmd (dans cette fonction)
	- déplacement des fonctions de linked list vers le file "cmd_list.c"
	- ajout de commentaires sur les principales fonctions
	- ajout "static" pour les fonctions "ft_get_pipe()" et "ft_next_pipe()"
	- ajout des dprintf pour afficher la raw_cmd et sa len

> Modification dans le file "del_spaces.c"
	- ajout de commentaires sur les 3 fonctions
	- modif dprintf pour afficher les len

> Modification dans le file "get_redir.c"
	- ajout de commentaires sur les 3 principales fonctions (et pas les tok_redir)
	- modif dprintf pour afficher les len
	- correction des 'invalid read' pour le cas où on atteint un ' ' à la fin d'un file, il faut refaire i-- (comme pour les chevrons)
		ex: lancer valgrind avec pour "t">>super"top"  --> invalid read sur ft_len_no_redir()
	--> modif des len, fill et get redir list pour :
		- prendre en compte le cas où il y a plusieurs textes entre "" après une redirection (pour le moment le 1er seulement est pris en compte)
			et faire une boucle
		- mettre le type à 0 à chaque fin de boucle (get_redir_list)
		- ne pas supprimer les espaces après la redirection dans le cas où il n'y en avait pas avant (sinon, les token se collent)
			et plutôt nettoyer les espaces dans del_quotes ou avant... dans le del_dolls

			cf. cas :
			problemes d'espaces si on retire les redirections
			--> mieux vaut ne pas enlever les espaces lors de get_redir et nettoyer par la suite les espaces
			(car ce seront des espaces hors quotes et donc pas en négatif...)
			sinon, le risque est d'avoir 2 token collés (car plus de redir entre...)
			tests:
				"coucou">"tut""tot">>test 'abcd $? eee'
				"coucou" >'tut' >> test 'youpi'

> Modification dans le file "del_dolls.c"
	- ajout de commentaires sur les principales fonctions
	- ajout du nettoyage des espaces suites au redirections (len & fill)
	- modifier le nom : undoll_len en len pour la fonction principale (même modèle que del_spaces, get_redir...)

> Modification dans le file "del_quotes"
	- modifier le nom : unquote_cmd_len en len pour la fonction principale (même modèle que del_spaces, get_redir, del_dolls...)
	- WIP

> PAS DE MODIF dans le file "expand.c" (pas eu le temps de re-regarder)

> Modification dans le file "token_2.c"
	- ajustements sur la fonction ft_get_token(t_cmd *cmd)
	- ajout de '/**/' pour le printf de la linked list
